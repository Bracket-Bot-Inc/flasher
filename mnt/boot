ROOT_DEV=$(findmnt -no SOURCE /)

# Add journal + 5‑second commit window (harmless if already set)
if ! tune2fs -l "$ROOT_DEV" | grep -q "has_journal"; then
  tune2fs -O has_journal "$ROOT_DEV"
fi
# Set defaults: full data‑journaling and 5 s commit interval
if ! tune2fs -l "$ROOT_DEV" | grep -q "journal_data"; then
  tune2fs -o journal_data,commit=5 "$ROOT_DEV"
fi

# Patch /etc/fstab for safer options (idempotent)
FSTAB_LINE=$(grep -nE "\s/\s+ext4" /etc/fstab | cut -d: -f1)
if [[ -n "$FSTAB_LINE" ]]; then
  sed -i "${FSTAB_LINE}s@[^ ]*\s*/\s*ext4.*@${ROOT_DEV} / ext4 defaults,noatime,nolazytime,errors=remount-ro 0 1@" /etc/fstab
fi

OLD_USER=dietpi
NEW_USER=bracketbot
NEW_PASS=1234

# Remove default DietPi user if present
id "$OLD_USER" &>/dev/null && {
  deluser --remove-home "$OLD_USER" || true
  rm -rf "/home/$OLD_USER"
}

# Create bracketbot if missing
if ! id "$NEW_USER" &>/dev/null; then
  adduser --disabled-password --gecos "" "$NEW_USER"
  echo "$NEW_USER:$NEW_PASS" | chpasswd
fi

# Sudo NOPASSWD
SUDOERS_FILE="/etc/sudoers.d/$NEW_USER"
printf "%s ALL=(ALL) NOPASSWD:ALL\n" "$NEW_USER" >"$SUDOERS_FILE"
chmod 0440 "$SUDOERS_FILE"

# Helpful groups

for grp in sudo dialout video audio spi; do
  getent group "$grp" >/dev/null || groupadd "$grp"
  usermod -aG "$grp" "$NEW_USER"
done

# SPI udev rule (idempotent)
RULE="/etc/udev/rules.d/90-spi.rules"
[[ -f $RULE ]] || echo 'SUBSYSTEM=="spidev", GROUP="spi", MODE="0660"' > "$RULE"


# Copy UART overlay (idempotent)
mkdir -p /boot/overlay-user
OVERLAY_SRC="/boot/dtb/rockchip/overlay/rk3588-uart2-m0.dtbo"
OVERLAY_DST="/boot/overlay-user/rk3588-uart2-m0.dtbo"
[[ -f "$OVERLAY_SRC" && ! -f "$OVERLAY_DST" ]] && cp "$OVERLAY_SRC" "$OVERLAY_DST"

# install bracketbot
runasuser() {
       su - bracketbot -c "cd /home/bracketbot; source ~/.bashrc; $*"
}
runasuser "curl -LsSf https://astral.sh/uv/install.sh | sh"
runasuser "uv python install 3.11"
runasuser "[[ -d BracketBotOS ]] || git clone -b ipc https://oauth2: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@github.com/Bracket-Bot-Inc/BracketBotOS.git"
runasuser "cd BracketBotOS; uv run ./install"

# allows daemons python to set process priority
runasuser "sudo setcap 'cap_sys_nice=eip' \$(nix-build 'https://github.com/NixOS/nixpkgs/archive/63dacb46bf939521bdc93981b4cbb7ecb58427a0.tar.gz' -A python311 --no-out-link)/bin/python3.11"

# Use NetworkManager instead of ifupdown
sudo apt purge -y ifupdown isc-dhcp-client isc-dhcp-server

sudo systemctl disable --now \
       ifupdown-pre.service \
       dnsmasq.service \
       ifup@wlan0.service ifup@eth0.service \
       dietpi-wifi-monitor.service || true
sudo systemctl mask networking.service ifupdown-pre.service
printf "auto lo\niface lo inet loopback\n" | sudo tee /etc/network/interfaces

# disable mac randomization
NETWORK_MANAGER_CONF="/etc/NetworkManager/conf.d/90-disable-mac-rand.conf"
if [[ ! -f "$NETWORK_MANAGER_CONF" ]]; then
  sudo tee "$NETWORK_MANAGER_CONF" >/dev/null <<'EOF'
[device]
wifi.scan-rand-mac-address=no

[connection]
wifi.cloned-mac-address=permanent
EOF
fi

sudo systemctl restart NetworkManager

sleep 10

sudo reboot